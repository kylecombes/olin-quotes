@import 'constants';

.BoardView {

  .header {
    display: flex;
    flex-direction: row;
    flex-grow: 0;
    align-items: center;
    justify-content: space-between;
    color: $color-content-text;
    background-color: $color-content-background;

    .board-name {
      font-size: 1.2em;
      font-weight: bold;
    }

    .button-container {
      display: flex;

      & > div {
        display: flex;
        align-items: center;
        cursor: pointer;
        padding: 1em;
        transition: background-color 0.3s ease;
        background-color: $color-content-background;

        &:hover {
          background-color: darken($color-content-background, $hover-delta);
        }

        svg {
          width: 1.2em;
        }

        span {
          margin-left: 0.7em;
        }
      }
    }
  }

  .quote-cards {
    padding: $quote-cards-gutter-width;
    position: relative;

    .QuoteCard {
      margin: 1em $quote-cards-gutter-width;

      $quote-cards-per-row: 1;
      $min-quote-card-width: 25em;

      @function calcQuoteCardWidth($cards-per-row) {
        @return (100% - 2*$cards-per-row*$quote-cards-gutter-width - 2*$quote-cards-gutter-width)/$cards-per-row;
      }

      width: calcQuoteCardWidth(1);

      @media screen and (min-width: $min-quote-card-width*2) {
        width: calcQuoteCardWidth(2);
      }

      @media screen and (min-width: $min-quote-card-width*3) {
        width: calcQuoteCardWidth(3);
      }

      @media screen and (min-width: $min-quote-card-width*4) {
        width: calcQuoteCardWidth(4);
      }

      @media screen and (min-width: $min-quote-card-width*5) {
        width: calcQuoteCardWidth(5);
      }

      @media screen and (min-width: $min-quote-card-width*6) {
        width: calcQuoteCardWidth(6);
      }
    }
  }
}
